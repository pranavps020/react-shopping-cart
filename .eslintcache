[{"C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\index.js":"1","C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\App.js":"2","C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\Navbar\\Navbar.jsx":"3","C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\Navbar\\Styles.js":"4","C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\Products\\Products.jsx":"5","C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\Products\\Product\\Product.jsx":"6","C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\Products\\Product\\styles.js":"7","C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\Products\\Styles.jsx":"8","C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\lib\\commerce.js":"9","C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\Cart\\Cart.jsx":"10","C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\Cart\\styles.js":"11","C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\Cart\\CartItem\\CartItem.jsx":"12","C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\Cart\\CartItem\\styles.js":"13","C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"14","C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\CheckoutForm\\Checkout\\styles.js":"15","C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\CheckoutForm\\AddressForm.jsx":"16","C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\CheckoutForm\\PaymentForm.jsx":"17","C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\CheckoutForm\\Review.jsx":"18","C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\CheckoutForm\\CustomTextField.js":"19"},{"size":220,"mtime":1607864497776,"results":"20","hashOfConfig":"21"},{"size":2805,"mtime":1608288668066,"results":"22","hashOfConfig":"21"},{"size":1220,"mtime":1608222208404,"results":"23","hashOfConfig":"21"},{"size":1631,"mtime":1607840469980,"results":"24","hashOfConfig":"21"},{"size":706,"mtime":1608047722435,"results":"25","hashOfConfig":"21"},{"size":1284,"mtime":1608048601143,"results":"26","hashOfConfig":"21"},{"size":447,"mtime":1607864497761,"results":"27","hashOfConfig":"21"},{"size":300,"mtime":1607841253522,"results":"28","hashOfConfig":"21"},{"size":140,"mtime":1607865047703,"results":"29","hashOfConfig":"21"},{"size":1780,"mtime":1608285622497,"results":"30","hashOfConfig":"21"},{"size":597,"mtime":1608217835991,"results":"31","hashOfConfig":"21"},{"size":1430,"mtime":1608220084170,"results":"32","hashOfConfig":"21"},{"size":349,"mtime":1608220084169,"results":"33","hashOfConfig":"21"},{"size":3222,"mtime":1608304508124,"results":"34","hashOfConfig":"21"},{"size":1208,"mtime":1608285622393,"results":"35","hashOfConfig":"21"},{"size":4705,"mtime":1608356591833,"results":"36","hashOfConfig":"21"},{"size":2541,"mtime":1608356591905,"results":"37","hashOfConfig":"21"},{"size":918,"mtime":1608286322091,"results":"38","hashOfConfig":"21"},{"size":555,"mtime":1608286514685,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"lo3vr3",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\index.js",[],["82","83"],"C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\App.js",[],"C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\Navbar\\Navbar.jsx",[],"C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\Navbar\\Styles.js",[],"C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\Products\\Product\\styles.js",["84"],"import { makeStyles } from '@material-ui/core/styles'\r\nimport { FullscreenExit } from '@material-ui/icons'\r\n\r\nexport default makeStyles(() => ({\r\n    root: {\r\n        maxWidth: '100%',\r\n    },\r\n    media: {\r\n        height:'0',\r\n        paddingTop:'56.25%'\r\n    },\r\n    cardActions:{\r\n        display:'flex',\r\n        alignItems:'flex-end',\r\n    },\r\n    cardContent:{\r\n        display:'flex',\r\n        justifyContent:'space-between',\r\n    }\r\n}))","C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\Products\\Styles.jsx",[],"C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\lib\\commerce.js",[],"C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\Cart\\Cart.jsx",[],"C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\Cart\\styles.js",[],"C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\Cart\\CartItem\\styles.js",[],"C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["85"],"import React, { useState, useEffect } from 'react';\r\nimport { CssBaseline, Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button } from '@material-ui/core';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { commerce } from '../../../lib/commerce';\r\nimport AddressForm from '../AddressForm.jsx';\r\nimport PaymentForm from '../PaymentForm';\r\nimport useStyles from './styles';\r\n\r\nconst steps = ['Shipping address', 'Payment details'];\r\n\r\nconst Checkout = ({ cart, onCaptureCheckout, order, error }) => {\r\n  const [checkoutToken, setCheckoutToken] = useState(null);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [shippingData, setShippingData] = useState({});\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n\r\n  useEffect(() => {\r\n    if (cart.id) {\r\n      const generateToken = async () => {\r\n        try {\r\n          const token = await commerce.checkout.generateToken(cart.id, { type: 'cart' });\r\n          setCheckoutToken(token);\r\n        } catch {\r\n          if (activeStep !== steps.length) history.push('/');\r\n        }\r\n      };\r\n\r\n      generateToken();\r\n    }\r\n  }, [cart]);\r\n\r\n  const test = (data) => {\r\n    setShippingData(data);\r\n\r\n    nextStep();\r\n  };\r\n\r\n  let Confirmation = () => (order.customer ? (\r\n    <div>\r\n      <div>\r\n        <Typography variant=\"h5\">Thank you for your purchase, {order.customer.firstname} {order.customer.lastname}!</Typography>\r\n        <Divider className={classes.divider} />\r\n        <Typography variant=\"subtitle2\">Order ref: {order.customer_reference}</Typography>\r\n      </div>\r\n      <br />\r\n      <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\r\n    </div>\r\n  ) : (\r\n    <div className={classes.spinner}>\r\n      <CircularProgress />\r\n    </div>\r\n  ));\r\n  if (error) {\r\n    Confirmation = () => (\r\n      <div>\r\n        <Typography variant=\"h5\">Error: {error}</Typography>\r\n        <br />\r\n        <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\r\n      </div>\r\n    );\r\n  }\r\n  const Form = () => (activeStep === 0\r\n    ? <AddressForm checkoutToken={checkoutToken} nextStep={nextStep} setShippingData={setShippingData} test={test} />\r\n    : <PaymentForm checkoutToken={checkoutToken} nextStep={nextStep} backStep={backStep} shippingData={shippingData} onCaptureCheckout={onCaptureCheckout} />);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <div className={classes.toolbar} />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\r\n          <Stepper activeStep={activeStep} className={classes.stepper}>\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />}\r\n        </Paper>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\nexport default Checkout;","C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\CheckoutForm\\AddressForm.jsx",["86","87"],"import React, { useState, useEffect } from 'react';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { commerce } from '../../lib/commerce';\r\nimport FormInput from './CustomTextField';\r\n\r\nconst AddressForm = ({ checkoutToken, test }) => {\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState('');\r\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState('');\r\n  const methods = useForm();\r\n\r\n  const fetchShippingCountries = async (checkoutTokenId) => {\r\n    const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n    setShippingCountries(countries);\r\n    setShippingCountry(Object.keys(countries)[0]);\r\n  };\r\n\r\n  const fetchSubdivisions = async (countryCode) => {\r\n    const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n\r\n    setShippingSubdivisions(subdivisions);\r\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n  };\r\n\r\n  const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\r\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\r\n\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0].id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchShippingCountries(checkoutToken.id);\r\n    \r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n  }, [shippingCountry]);\r\n\r\n  useEffect(() => {\r\n    if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n  }, [shippingSubdivision]);\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\r\n      <FormProvider {...methods}>\r\n        <form onSubmit={methods.handleSubmit((data) => test({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n          <Grid container spacing={3}>\r\n            <FormInput required name=\"firstName\" label=\"First name\" />\r\n            <FormInput required name=\"lastName\" label=\"Last name\" />\r\n            <FormInput required name=\"address1\" label=\"Address line 1\" />\r\n            <FormInput required name=\"email\" label=\"Email\" />\r\n            <FormInput required name=\"city\" label=\"City\" />\r\n            <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Country</InputLabel>\r\n              <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Subdivision</InputLabel>\r\n              <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddressForm;","C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\CheckoutForm\\Review.jsx",[],"C:\\Users\\PS\\projects\\rdx\\shopping-cart\\shopping-cart\\src\\components\\CheckoutForm\\CustomTextField.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":24},{"ruleId":"96","severity":1,"message":"97","line":35,"column":6,"nodeType":"98","endLine":35,"endColumn":12,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":42,"column":6,"nodeType":"98","endLine":42,"endColumn":8,"suggestions":"101"},{"ruleId":"96","severity":1,"message":"102","line":50,"column":6,"nodeType":"98","endLine":50,"endColumn":27,"suggestions":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'FullscreenExit' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeStep' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["106"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["107"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["108"],"no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [activeStep, cart, history]",{"range":"115","text":"116"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"117","text":"118"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"119","text":"120"},[1310,1316],"[activeStep, cart, history]",[1740,1742],"[checkoutToken.id]",[1993,2014],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]